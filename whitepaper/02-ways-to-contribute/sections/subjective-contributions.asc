=== Subjective Contributions

Subjective Proof of Work presents an alternative approach to distributing a currency that improves upon fully _objective_ Proof of Work systems such as mining.
The applications of a currency implementing _subjective_ proof of work are far wider than any _objective_ proof of work system because they can be applied to build a community around any concept that has a sufficiently defined purpose.
When individuals join a community they buy into a particular set of beliefs and can vote to reinforce the community values or purpose.

In effect, the criteria by which work is evaluated is completely subjective and its definition lives outside the source code itself.
One community may wish to reward artists, another poets, and another comedians.
Other communities may choose to reward charitable causes or help advance political agendas.

The value each currency achieves depends upon the demand for influence within a particular community and how large the market believes each community can get.
Unlike prior systems, subjective proof of work enables a community to collectively fund the development of whatever it finds valuable and enables the monetization of previously non monetizable time.

==== Distributing Currency

There are two ways people can get involved with a crypto-currency community: they can _buy in_, or they can _work in_.
In both cases users are adding value to the currency, however, the vast majority of people have more free time than they do spare cash.
Imagine the goal of bootstrapping a currency in a poor community with no actual cash but plenty of time.
If people can earn money by working for one another then they will bootstrap value through mutual exchange facilitated by a fair accounting/currency system.

Distributing a currency to as many people as possible in a manner that is generally perceived as fair is a challenging task.
The tasks that can be entirely evaluated by an objective computer algorithm are limited in nature and generally speaking have limited positive external benefits.
In the case of Bitcoin-style mining, it can result in the production of specialized hardware and cause people to invest time developing more efficient algorithms.
It may even help find prime numbers, but none of these things provide meaningful value to society or the currency holding community at large.

More importantly, economies of scale and market f orces will end up excluding everyone but experts from participating in this kind of distribution.
Ultimately, computation-based mining is just another way of _buying in_ because it requires money to pay the electric bill or the development of hardware necessary to do the work.

In order to give everyone an equal opportunity to get involved and earn the currency people must be given an opportunity to work.
The challenge is how to judge the relative quality and quantity of work that individuals provide and to do so in a way that efficiently allocates rewards to millions of users.
This requires the introduction of a scalable voting process.
In particular it requires that authority to allocate funds must be as distributed and decentralized as possible.

The first step in rewarding millions of users is to commit to distributing a fixed amount of currency regardless of how much work is actually done or how users vote.
This changes the question from being _“Should we pay?”_ to _“Whom should we pay?”_ and signals to the market that money is being distributed and is being auctioned off to whoever “bids” the most work.
This is similar to Bitcoin committing to award 50 BTC to whoever finds the most difficult hashes.
Like Bitcoin, all work must be done prior-to payout and nothing should be paid speculatively on the promise to do work in the future.
The next step is to reward everyone who does anything even remotely positive with something.
This is accomplished by ranking all work done and distributing proportionally to its value.
The more competitive the market becomes, the more difficult (higher quality or quantity) it becomes to earn the same payout.

==== Voting on Distribution of Currency

Assume there is a fixed amount of money to distribute, and that those who have a long-term vested interest in the future value and utility of the currency are the ones who must decide how to allocate it.
Every vesting user casts their votes on who did the best work and at the end of the day the available money for that day is divided proportional to the votes such that everyone with even one net positive vote gets something.
The naive voting process creates a Prisoner's Dilemma whereby each individual voter has incentive to vote for themselves at the expense of the larger community goal.
If every voter defects by voting for themselves then no currency will end up distributed and the currency as a whole will fail to gain network effect.
On the other hand, if only one voter defects then that voter would win undeserved profits while having minimal effect on the overall value of the currency.

In order to realign incentives and discourage individuals from simply voting for themselves, money must be distributed in a nonlinear manner.
For example a quadratic function in votes, i.e., someone with twice the votes of someone else should receive four times the payout and someone with three times the votes should receive nine times the payout.
In other words, the reward is proportional to _votes^2^_ rather than _votes_.
This mirrors the value of network effect which grows with _n^2^_ the number of participants, according to Metcalfe’s Law^https://en.wikipedia.org/wiki/Metcalfe%27s_law[5]^.

Assuming all users have equal stake, someone who only receives their own vote will receive much less than someone who receives votes from 100 different users.
This encourages users to _cooperate_ to vote for the same things to maximize the payout.
This system also creates financial incentive to _collude_ where everyone votes on one thing and then divides the reward equally among themselves.

===== Voting Collusion

While _cooperation_ to distribute funds to the best work is the desired goal, _collusion_ that undermines this objective should be minimized.
There are two kinds of _collusion_, the most straightforward is when one user simply buys a larger stake than others, and the other involves coordinating a large number of smaller stakeholders to work together.
Larger stakeholders can have the voting influence of 100 or even 1000 smaller stakeholders which means they have even greater incentive to defect by voting for themselves than they had under a linear distribution.

Regardless of how much money any one individual has, there are always many other individuals with similar wealth. Even the wealthiest individual rarely has much more than the next couple wealthiest combined.
Furthermore, those who have a large investment in a community also have the most to lose by attempting to game the voting system for themselves.
It would be like the CEO of a company deciding to stop paying salaries so he could pocket all of the profits.
Everyone would leave to work for other companies and the company would become worthless, leaving the CEO bankrupt rather than wealthy.

Fortunately, any work that is getting a large concentration of votes is also gaining the most scrutiny (publicity).
Through the addition of _negative-voting_ it is possible for many smaller stakeholders to nullify the voting power of collusive groups or defecting large stakeholders.
Furthermore, large-stakeholders have more to lose if the currency falls in value due to abuse than they might gain by voting for themselves.
In fact, honest large stakeholders are likely to be more effective by policing abuse and using negative voting than they would be by voting for smaller contributions.

The use of _negative-voting_ to keep people from abusing the system leverages the _crab mentality_ that many people have when it is perceived that one individual is profiting at the expense of everyone else.
While crab mentality normally refers to short-sighted people keeping good people down, it is also what allows good people to keep bad people down.

The only “problem” with crab mentality is when people _wrongly believe_ someone is profiting at everyone else's expense.

[quote, The Story of the Crab Bucket - http://guidezone.e-guiding.com/jmstory_crabs.htm]
____________________________________________________________________
The Story of the Crab Bucket

A man was walking along the beach and saw another man fishing in the surf with a bait bucket beside him.
As he drew closer, he saw that the bait bucket had no lid and had live crabs inside.

"Why don't you cover your bait bucket so the crabs won't escape?", he said.

"You don't understand.", the man replied, "If there is one crab in the bucket it would surely crawl out very quickly.
However, when there are many crabs in the bucket, if one tries to crawl up the side, the others grab hold of it and pull it back down so that it will share the same fate as the rest of them."

So it is with people.
If one tries to do something different, get better grades, improve herself, escape her environment, or dream big dreams, other people will try to drag her back down to share their fate.
____________________________________________________________________

Eliminating “abuse” is not possible and shouldn’t be the goal.
Even those who are attempting to “abuse” the system are still doing work.
Any compensation they get for their successful attempts at abuse or collusion is at least as valuable for the purpose of distributing the currency as the make-work system employed by traditional Bitcoin mining or the collusive mining done via mining pools.
All that is necessary is to ensure that abuse isn’t so rampant that it undermines the incentive to do real work in support of the community and its currency.

The goal of building a community currency is to get more “crabs in the bucket”.
Going to extreme measures to eliminate all abuse is like attempting to put a lid on the bucket to prevent a few crabs from escaping and comes at the expense of making it harder to add new crabs to the bucket.
It is sufficient to make the walls slippery and give the other crabs sufficient power to prevent others from escaping.

==== Rate Limited Voting

A major part of minimizing abuse is the rate-limiting of voting.
Individual users can only read and evaluate so many work items per day.
Any attempt to vote more frequently than this is a sign of automation and potential abuse.
Through rate limiting, stakeholders who vote more frequently have each vote count for less than stakeholders who vote less frequently.
Attempts to divide tokens among multiple accounts also divides influence and therefore does not result in a net increase in influence nor bypass the rate-limit imposed on voting.

IMAGES

The charts above shows how a user’s voting power decreases every time they vote and then regenerates as time passes without voting.
These charts use nominal time unit and could be made to scale to any targeted voting rate.
Note that voting power rapidly drops off during periods of continuous voting, and then slowly recovers.
Voting power is multiplied by a user’s vesting tokens to determine how much share in the reward pool should be allocated to a given work item.

==== Delayed Payouts

To further prevent abuse, all payouts are delayed a stake-weighted average of 24 hours from the time each vote was cast.
This ensures that large stakeholders cannot snipe payouts by voting at the last second before other voters (aka crabs) have a chance to negate the potential abuse.
Once a payout is made to the user all votes are reset to 0.
If votes come in after the payout then the process begins again.

This chart shows how the voting period expiration changes in response to new positive and negative votes being applied.
New votes extend the payout period in proportion to how large they are relative to all votes that have gone before.
Around time 40 a large number of new votes were added which extended the voting period by 12 hours, subsequent smaller votes had far less impact on the voting period.

==== Payout Distribution

One of the primary goals of Steem’s reward system is to produce the best discussions on the internet.
Each and every year 10% of the market capitalization of Steem is distributed to users submitting, voting on, and discussing content.
At the size of Bitcoin this could be as much as $1.75 million dollars per day being given to top contributors.

The actual distribution will depend upon the voting patterns of users, but we suspect that the vast majority of the rewards will be distributed to the most popular content.
Steem weighs payouts proportional to n^2^ the amount of Steem Power voting for a post.
In other words, post x would receive a payout proportional to:

votes[x]^2 / sum(votes[0…n]^2)

Zipf’s Law^https://en.wikipedia.org/wiki/Zipf%27s_law[7]^ is one of those empirical rules that characterize a surprising range of real-world phenomena remarkably well.
It says that if we order some large collection by size or popularity, the second element in the collection will be about half the measure of the first one, the third one will be about one-third the measure of the first one, and so on.
In general, the k th-ranked item will measure about 1/k of the first one.

Taking popularity as a rough measure of value, then the value of each individual item is given by Zipf’s Law.
That is, if we have a million items, then the most popular 100 will contribute a third of the total value, the next 10,000 another third, and the remaining 989,900 the final third.
The value of the collection of n items is proportional to log( n ).

The impact of this voting and payout distribution is to offer large bounties for good content while still rewarding smaller players for their long-tail contribution.

The economic effect of this is similar to a lottery where people over-estimate their probability of getting votes and thus do more work than the expected value of their reward and thereby maximize the total amount of work performed in service of the community.
The fact that everyone “wins something” plays on the same psychology that casinos use to keep people gambling.
In other words, small rewards help reinforce the idea that it is possible to earn bigger rewards.

===== Rewarding Parent Posts

Good discussion requires back and forth posting.
When you reply to someone else, they get 50% of any payout you receive in that thread.
This rule applies up to 6 levels deep.
Starting a big discussion greatly rewards the parent poster.

Failure to properly nest your posts in the discussion is a good way to get down voted.

This incentive structure motivates people to contribute in a way that motivates others to get involved.
It encourages people to ask good questions so that others can provide valuable answers.

==== Payouts

When a post receives a payout it takes the form of 50% SMD and 50% SP.
The Steem Power give the user increased voting and transaction power while the SMD gives the user an immediate benefit in a stable currency.
As we’ve already discussed at length, both SP and SMD are designed to encourage long-term holding rather than short-term selling.
